# General application settings
name: app-name                  # Default application name
namespace: media                # Namespace for the application

# Docker container settings
image:
  repository: my-container-repo
  tag: latest                   # Image tag for the container
  pullPolicy: IfNotPresent      # Image pull policy

# Replica settings
replicaCount: 1

# Port configuration
ports:
  servicePort: 80               # Port exposed by the service
  targetPort: 8080              # Target port in the container

# Global networking options
networking:
  ipFamilyPolicy: PreferDualStack  # Can be PreferDualStack, RequireDualStack, or SingleStack
  singleStackIPFamily: IPv4        # Default to IPv4 for single-stack clusters
  
# DNS configuration
dnsPolicy: ClusterFirst       # Default DNS policy
dnsConfig:
  enabled: false                # Enable or disable custom DNS settings
  options:
    - name: ndots
      value: "1"

# Config PVC settings
config:
  enabled: false                # Enable or disable Config PVC
  mountPath: /config            # Mount path for the Config PVC
  storageSize: 100Mi            # Default size for the Config PVC

# Data PVC settings
data:
  enabled: true                 # Enable or disable Data PVC
  mountPath: /data              # Mount path for the Data PVC
  storageSize: 10Gi             # Size of the Data PVC

#command:
#  - "filebrowser"  # Overrides ENTRYPOINT
#args:
#  - "-r"
#  - "/srv"
#  - "-a"
#  - "0.0.0.0"
#  - "-p"
#  - "8080"

# Comment out section if not needed
#volumeMountsExtras:
#  - name: config
#    mountPath: /filebrowser.db
#    subPath: filebrowser.db
#  - name: config
#    mountPath: /settings.json
#    subPath: settings.json              # Enable or disable additional volume mounts
#  

#volumesExtras:
#  - name: config-volume
#    configMap:
#      name: filebrowser-config

# Pod-level security context
podSecurityContext:
  enabled: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: OnRootMismatch

# Container-level security context
containerSecurityContext:
  enabled: true
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
#  config:
#    capabilities:
#      add:
#        - SETGID

# Resource limits and requests
resources:
  enabled: false                # Enable or disable resource settings
  requests:
    memory: "256Mi"             # Memory request for the container
    cpu: "250m"                 # CPU request for the container
  limits:
    memory: "512Mi"             # Memory limit for the container
    cpu: "500m"                 # CPU limit for the container

# Tolerations and affinity
tolerations: []                 # Define tolerations for node taints

affinity:
  enabled: false
  nodeAffinity:
    - matchExpressions:
        - key: "intel.feature.node.kubernetes.io/gpu"
          operator: In
          values:
            - "true"
  
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      labelSelector:
        matchLabels:
          app: "my-app"


# Headless service configuration
headless:
  enabled: false                # Enable or disable headless service

# Ingress configuration
ingress:
  enabled: false                # Enable or disable Ingress
  className: cilium             # Ingress class name
  tls:
    certManagerIssuer: letsencrypt-prod # Cert-manager issuer for TLS certificates

# Gateway configuration
gateway:
  enabled: false                # Enable or disable HTTPRoute
  name: gateway-internal        # Name of the Gateway
  namespace: network            # Namespace of the Gateway
  domain: sulibot.com           # Default domain for hostnames


# Environment variables
env: []                         # Define additional environment variables
# Example:
# - name: ENV_VAR_1
#   value: "value1"

# Labels and Annotations
labels:
  global: {}                    # Global labels applied to all resources
annotations:
  pod: {}                       # Pod-level annotations

                  # Define affinity and anti-affinity rules