apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "chart-template.fullname" . }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    app.kubernetes.io/name: "{{ include "chart-template.name" . }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "deployment"
    app.kubernetes.io/managed-by: "Helm"
  annotations:
    description: "Annotations for deployment"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ include "chart-template.fullname" . }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "chart-template.name" . }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/component: "deployment"
        app.kubernetes.io/managed-by: "Helm"
      annotations:
        description: "Annotations for deployment"
    spec:
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      containers:
        - name: "{{ include "chart-template.fullname" . }}"
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest | default (printf "%s:%s" .Values.image.repository .Values.image.tag) }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.ports.targetPort }}
          env:
            - name: TZ
              value: "{{ .Values.timezone }}"
          resources:
            {{- if .Values.resources.enabled }}
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config
            - name: shared-media
              mountPath: /media
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: "{{ include "chart-template.fullname" . }}-config-pvc"
        - name: shared-media
          persistentVolumeClaim:
            claimName: "shared-media-pvc"
