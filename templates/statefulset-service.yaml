# StatefulSet configuration
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "chart-template.fullname" . }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    app.kubernetes.io/name: "{{ include "chart-template.name" . }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "statefulset"
    app.kubernetes.io/managed-by: "Helm"
    {{- with (default dict .Values.labels.global) }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ include "chart-template.fullname" . }}"
  template:
    metadata:
      labels:
        app: "{{ include "chart-template.fullname" . }}"
        app.kubernetes.io/name: "{{ include "chart-template.name" . }}"
      annotations:
        {{- with (default dict .Values.annotations.pod) }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
      dnsPolicy: {{ .Values.dnsPolicy | default "ClusterFirst" }}
      {{- if .Values.dnsConfig.enabled | default false }}
      dnsConfig:
        options:
          {{- toYaml .Values.dnsConfig.options | nindent 10 }}
      {{- else }}
        {}
      {{- end }}
 
      {{- if .Values.podSecurityContext.enabled | default false }}
      securityContext:
        {{- toYaml (omit .Values.podSecurityContext "enabled") | nindent 8 }}
      {{- end }}

      containers:
        - name: "{{ include "chart-template.fullname" . }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.ports.targetPort }}
          env:
            - name: TZ
              value: "{{ .Values.timezone }}"
            {{- with .Values.env }}
            {{ toYaml . | nindent 12 }}
            {{- end }}

          {{- if .Values.containerSecurityContext.enabled | default false }}
          securityContext:
            {{- toYaml (omit .Values.containerSecurityContext "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.resources.enabled }}
          resources:

            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          {{- end }}
          
          volumeMounts:
            {{- if .Values.config.enabled | default false }}
            - name: config
              mountPath: "{{ .Values.config.mountPath }}"
              storageSize: "{{ .Values.config.storageSize | default "100Mi" }}"
            {{- end }}
            {{- if .Values.data.enabled | default false }}
            - name: data
              mountPath: "{{ .Values.data.mountPath }}"
              storageSize: "{{ .Values.data.storageSize | default "10Gi" }}" 
            {{- end }}

            {{- if .Values.volumeMountsExtras }}
            securityContext:
              {{- toYaml . | nindent 14 }}
            {{- end }}


      volumes:
        {{- if .Values.data.enabled | default false }}
        - name: data
          persistentVolumeClaim:
            claimName: "cephfs-pvc-media"  # Reference to dynamically mounted PVC
        {{- end }}
      tolerations:
        {{- if .Values.tolerations }}
        {{ toYaml .Values.tolerations | nindent 8 }}
        {{- end }}
      affinity:
        {{- if .Values.affinity }}
        {{ toYaml .Values.affinity | nindent 8 }}
        {{- end }}
  {{- if .Values.config.enabled | default false }}
  volumeClaimTemplates:
    - metadata:
        name: config
        labels:
          app: "{{ include "chart-template.fullname" . }}"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ .Values.config.storageSize | default "100Mi" }}"
        storageClassName: "cephfs-csi-sol-sc-retain"
  {{- end }}

---

# Headless Service
{{- if .Values.headless.enabled | default false }}
apiVersion: v1
kind: Service
metadata:
  name: "{{ include "chart-template.fullname" . }}-headless"
  namespace: "{{ .Values.namespace }}"
spec:
  clusterIP: None
  ipFamilyPolicy: {{ .Values.networking.ipFamilyPolicy | default "PreferDualStack" }}
  {{- if or (eq (.Values.networking.ipFamilyPolicy | default "PreferDualStack") "PreferDualStack") (eq (.Values.networking.ipFamilyPolicy) "RequireDualStack") }}
  ipFamilies:
    - IPv4
    - IPv6
  {{- else if eq (.Values.networking.ipFamilyPolicy) "SingleStack" }}
  ipFamilies:
    - {{ .Values.networking.singleStackIPFamily | default "IPv4" }}
  {{- end }}

  selector:
    {{- if .Values.headless.selector }}
    {{ toYaml .Values.headless.selector | nindent 4 }}
    {{- else }}
    app: "{{ include "chart-template.fullname" . }}"
    {{- end }}

  ports:
    - name: http
      port: {{ .Values.ports.servicePort }}
      targetPort: {{ .Values.ports.targetPort }}
{{- end }}

---

# Standard Service
{{- if or (.Values.gateway.enabled | default false) (.Values.ingress.enabled | default false) }}
apiVersion: v1
kind: Service
metadata:
  name: "{{ include "chart-template.fullname" . }}-service"
  namespace: "{{ .Values.namespace }}"
  labels:
    app.kubernetes.io/name: "{{ include "chart-template.name" . }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
spec:
  ipFamilyPolicy: {{ .Values.networking.ipFamilyPolicy | default "PreferDualStack" }}
  {{- if or (eq (.Values.networking.ipFamilyPolicy | default "PreferDualStack") "PreferDualStack") (eq (.Values.networking.ipFamilyPolicy) "RequireDualStack") }}
  ipFamilies:
    - IPv4
    - IPv6
  {{- else if eq (.Values.networking.ipFamilyPolicy) "SingleStack" }}
  ipFamilies:
    - {{ .Values.networking.singleStackIPFamily | default "IPv4" }}
  {{- end }}
  selector:
    app: "{{ include "chart-template.fullname" . }}"
  ports:
    - name: http
      protocol: TCP
      port: {{ .Values.ports.servicePort }}
      targetPort: {{ .Values.ports.targetPort }}
  type: ClusterIP
{{- end }}

---

# Ingress Configuration
{{- if .Values.ingress.enabled | default false }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ include "chart-template.fullname" . }}-ingress"
  namespace: "{{ .Values.namespace }}"
  annotations:
    kubernetes.io/ingress.class: "{{ .Values.ingress.className }}"
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.tls.certManagerIssuer }}"
spec:
  tls:
    - hosts:
        - "{{ printf "%s.%s" (include "chart-template.fullname" .) (default "sulibot.com" .Values.gateway.domain) }}"
      secretName: "{{ include "chart-template.fullname" . }}-tls"
  rules:
    - host: "{{ printf "%s.%s" (include "chart-template.fullname" .) (default "sulibot.com" .Values.gateway.domain) }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ include "chart-template.fullname" . }}-service"
                port:
                  number: {{ .Values.ports.servicePort }}
{{- end }}

---

# HTTPRoute Configuration
{{- if .Values.gateway.enabled | default false }}
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: {{ include "chart-template.fullname" . }}-route
  namespace: {{ .Values.gateway.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "chart-template.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: httproute

  annotations: {}
spec:
  parentRefs:
    - name: {{ .Values.gateway.name }}
      namespace: {{ .Values.gateway.namespace }}
  hostnames:
    - {{ printf "%s.%s" (default "default-name" .Values.name) (default "example.com" .Values.gateway.domain) }}
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: {{ include "chart-template.fullname" . }}-service
          namespace: {{ .Values.namespace }}
          port: {{ .Values.ports.servicePort }}
{{- end }}
