apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "chart-template.fullname" . }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    app.kubernetes.io/name: "{{ include "chart-template.name" . }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "statefulset"
    app.kubernetes.io/managed-by: "Helm"
    {{- with (default dict .Values.labels.global) }}{{ toYaml . | nindent 4 }}{{- end }}
    {{- with (default dict .Values.labels.statefulset) }}{{ toYaml . | nindent 4 }}{{- end }}
  annotations:
    {{- with (default dict .Values.annotations.global) }}{{ toYaml . | nindent 4 }}{{- end }}
    {{- with (default dict .Values.annotations.statefulset) }}{{ toYaml . | nindent 4 }}{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ include "chart-template.fullname" . }}"
  serviceName: "{{ include "chart-template.fullname" . }}-headless"
  template:
    metadata:
      labels:
        app: "{{ include "chart-template.fullname" . }}"
        app.kubernetes.io/name: "{{ include "chart-template.name" . }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/component: "statefulset"
        app.kubernetes.io/managed-by: "Helm"
        {{- with (default dict .Values.labels.global) }}{{ toYaml . | nindent 8 }}{{- end }}
        {{- with (default dict .Values.labels.pod) }}{{ toYaml . | nindent 8 }}{{- end }}
      annotations:
        {{- with (default dict .Values.annotations.global) }}{{ toYaml . | nindent 8 }}{{- end }}
        {{- with (default dict .Values.annotations.pod) }}{{ toYaml . | nindent 8 }}{{- end }}
    spec:
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      {{- if .Values.initContainer.enabled }}
      initContainers:
        - name: {{ .Values.initContainer.name }}
          image: {{ .Values.initContainer.image }}
          imagePullPolicy: IfNotPresent
          command: {{ .Values.initContainer.command | toYaml | nindent 10 }}
          args: {{ .Values.initContainer.args | toYaml | nindent 10 }}
          env:
            {{- with .Values.initContainer.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            {{- with .Values.initContainer.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- end }}
      containers:
        - name: "{{ include "chart-template.fullname" . }}"
          image: "{{ .Values.image.repository }}{{ if .Values.image.digest }}@{{ .Values.image.digest }}{{ else }}:{{ .Values.image.tag }}{{ end }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.ports.targetPort }}
          env:
            - name: TZ
              value: "{{ .Values.timezone }}"
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          {{- end }}
          resources:
            {{- if .Values.resources.enabled }}
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.config.enabled }}
            - name: config
              mountPath: "{{ .Values.config.mountPath }}"
            {{- end }}
            {{- if .Values.shared-media.enabled }}
            - name: shared-media
              mountPath: "{{ .Values.shared-media.mountPath }}"
            {{- end }}
      volumes:
        {{- if .Values.config.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: "{{ include "chart-template.fullname" . }}-config-pvc"
        {{- end }}
        {{- if .Values.shared-media.enabled }}
        - name: shared-media
          persistentVolumeClaim:
            claimName: "shared-media-pvc"
        {{- end }}
